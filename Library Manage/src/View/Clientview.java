/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ClientController;
import Model.Client;
import Model.ClientCategory;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.awt.Image;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.event.DocumentListener;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Element;
import javax.swing.text.Position;
import javax.swing.text.Segment;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author prince
 */
public class Clientview extends javax.swing.JInternalFrame {

    /**
     * Creates new form Client
     */
    File file;
    DefaultTableModel model;
    public Clientview() {
        initComponents();
        model = (DefaultTableModel)tables.getModel();
        alldata();
    }
    public void alldata(){
        List<Client> ls = new ClientController().listClients();
        for (Client cl : ls ){
        model.insertRow(model.getRowCount(), new Object[]{
        cl.getRegno(), cl.getFname(), cl.getLname(), cl.getPhone(), cl.getEmail(), cl.getClientCategory(), cl.getPhoto()
        });
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        regnos = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        emails = new javax.swing.JTextField();
        phonenumber = new javax.swing.JTextField();
        pictures = new javax.swing.JLabel();
        clientsave = new javax.swing.JButton();
        uploads = new javax.swing.JButton();
        comboclient = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tables = new javax.swing.JTable();
        clientdelete = new javax.swing.JButton();
        clientupdate = new javax.swing.JButton();
        clientdelete1 = new javax.swing.JButton();
        importpdf = new javax.swing.JButton();
        exportexcel = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CLIENTS");
        setToolTipText("");

        jPanel1.setToolTipText("Identification");
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("email");

        jLabel3.setText("RegNo.");

        jLabel4.setText("First Name");

        jLabel5.setText("Last Name");

        jLabel6.setText("Phone Number");

        regnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regnosActionPerformed(evt);
            }
        });

        pictures.setText("Photo");

        clientsave.setText("Save");
        clientsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientsaveActionPerformed(evt);
            }
        });

        uploads.setText("Upload");
        uploads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadsActionPerformed(evt);
            }
        });

        comboclient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "STUDENT", "STAFF", "EXTERNAL", " " }));

        jLabel1.setText("Client category");

        tables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RegNo.", "First Name", "Last Name", "Phone No.", "Email", "Client category", "Picture"
            }
        ));
        tables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tables);

        clientdelete.setText("delete");
        clientdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientdeleteActionPerformed(evt);
            }
        });

        clientupdate.setText("update");
        clientupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientupdateActionPerformed(evt);
            }
        });

        clientdelete1.setText("print");
        clientdelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientdelete1ActionPerformed(evt);
            }
        });

        importpdf.setText("Import pdf");
        importpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importpdfActionPerformed(evt);
            }
        });

        exportexcel.setText("Export excel");
        exportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportexcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(emails, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(218, 218, 218))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(regnos, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(80, 80, 80)
                                        .addComponent(pictures, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboclient, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(clientsave, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(clientupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(clientdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(importpdf, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(clientdelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uploads, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exportexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(regnos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(pictures, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emails, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboclient, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientdelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientsave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importpdf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exportexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(uploads, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(346, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regnosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regnosActionPerformed

    private void clientsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientsaveActionPerformed
        // TODO add your handling code here:
        ClientCategory ct=null;
        if(comboclient.getSelectedItem().toString().equals("STAFF")){
        ct = ClientCategory.STAFF;
        }
        if(comboclient.getSelectedItem().toString().equals("STUDENT")){
        ct = ClientCategory.STUDENT;
        }
        if(comboclient.getSelectedItem().toString().equals("EXTERNAL")){
        ct = ClientCategory.EXTERNAL;
        }
        Client cl = new Client(regnos.getText(),firstname.getText(),lastname.getText(),
                Integer.parseInt(phonenumber.getText()),emails.getText(),ct,file.getAbsolutePath());
        new ClientController().insert(cl);
        model.setRowCount(0);
       alldata();

    }//GEN-LAST:event_clientsaveActionPerformed

    private void uploadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadsActionPerformed
        // TODO add your handling code here:
        JFileChooser pic = new JFileChooser();
        pic.showOpenDialog(this);
        file = pic.getSelectedFile();
        String filename = file.getAbsolutePath();
        ImageIcon icon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(pictures.getWidth(),pictures.getHeight(),Image.SCALE_SMOOTH));
        pictures.setIcon(icon);
    }//GEN-LAST:event_uploadsActionPerformed

    private void clientdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientdeleteActionPerformed
        // TODO add your handling code here:
        ClientCategory ct=null;
        if(comboclient.getSelectedItem().toString().equals("STAFF")){
        ct = ClientCategory.STAFF;
        }
        if(comboclient.getSelectedItem().toString().equals("STUDENT")){
        ct = ClientCategory.STUDENT;
        }
        if(comboclient.getSelectedItem().toString().equals("EXTERNAL")){
        ct = ClientCategory.EXTERNAL;
        }
        Client cl = new Client(regnos.getText(),firstname.getText(),lastname.getText(),
                Integer.parseInt(phonenumber.getText()),emails.getText(),ct,file.getAbsolutePath());
        new ClientController().delete(cl);
        model.setRowCount(0);
       alldata();
    }//GEN-LAST:event_clientdeleteActionPerformed

    private void clientupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientupdateActionPerformed
        // TODO add your handling code here:
        ClientCategory ct=null;
        if(comboclient.getSelectedItem().toString().equals("STAFF")){
        ct = ClientCategory.STAFF;
        }
        if(comboclient.getSelectedItem().toString().equals("STUDENT")){
        ct = ClientCategory.STUDENT;
        }
        if(comboclient.getSelectedItem().toString().equals("EXTERNAL")){
        ct = ClientCategory.EXTERNAL;
        }
        Client cl = new Client(regnos.getText(),firstname.getText(),lastname.getText(),
                Integer.parseInt(phonenumber.getText()),emails.getText(),ct,file.getAbsolutePath());
        new ClientController().update(cl);
        model.setRowCount(0);
       alldata();
    }//GEN-LAST:event_clientupdateActionPerformed

    private void tablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesMouseClicked
        // TODO add your handling code here:
//        model = (DefaultTableModel) tables.getModel();
//        //Id.setEditable(false);
//        int row = tables.getSelectedRow();
//        regnos.setText(model.getValueAt(row, 0).toString());
//        firstname.setText(model.getValueAt(row, 1).toString());
//        lastname.setText(model.getValueAt(row, 2).toString());
//        phonenumber.setText(model.getValueAt(row, 3).toString());
//        phonenumber.setText(model.getValueAt(row, 4).toString());
//        emails.setText(model.getValueAt(row, 5).toString());
//        comboclient.setModel((ComboBoxModel<String>) model.getValueAt(row, 6));
//        ImageIcon icon = new ImageIcon(new ImageIcon(model.getValueAt(row, 7).toString()).getImage().getScaledInstance(pictures.getWidth(),
//                   pictures.getHeight(),Image.SCALE_SMOOTH));
//                pictures.setIcon(icon);
       
        
    }//GEN-LAST:event_tablesMouseClicked

    private void clientdelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientdelete1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientdelete1ActionPerformed

    private void importpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importpdfActionPerformed
        // TODO add your handling code here:
//        PdfPTable table = new PdfPTable(17);
//        table.setHeaderRows(1);
//        table.setSplitLate(false);
//        table.setSplitRows(false);
//        table.setComplete(false);
//
//        for (int q = 0; q < 1; q++) { //header setter
//            table.addCell("ClientID");
//            table.addCell("Firstname");
//            table.addCell("lastname");
//            table.addCell("Sales Date");
//            table.addCell("Sales Time");
//            table.addCell("Total Item");
//            table.addCell("Total Price");
//            table.addCell("Discount");
//            table.addCell("Total Payable");
//            table.addCell("Paid Amount");
//            table.addCell("Balance");
//            table.addCell("Payment Type");
//            table.addCell("Hold Id");
//            table.addCell("Return Note");
//            table.addCell("Hold Note");
//            table.addCell("Invoice Status");
//            table.addCell("User ID / Name");
//
//        }
//
//        for (int i = 1; i < tables.getRowCount(); i++) { //cell 
//
//            String id = tables.getValueAt(i, 0).toString();
//            String cn = tables.getValueAt(i, 1).toString();
//            String sd = tables.getValueAt(i, 2).toString();
//            String st = tables.getValueAt(i, 3).toString();
//            String ti = tables.getValueAt(i, 4).toString();
//            String tp = tables.getValueAt(i, 5).toString();
//            String dt = tables.getValueAt(i, 6).toString();
//            String tl = tables.getValueAt(i, 7).toString();
//            String pa = tables.getValueAt(i, 8).toString();
//            String bn = tables.getValueAt(i, 9).toString();
//            String pt = tables.getValueAt(i, 10).toString();
//            String hi = tables.getValueAt(i, 11).toString();
//            String rn = tables.getValueAt(i, 12).toString();
//            String hn = tables.getValueAt(i, 13).toString();
//            String is = tables.getValueAt(i, 14).toString();
//            String ui = tables.getValueAt(i, 15).toString();
//
//            table.addCell("" + i);
//            table.addCell(id);
//            table.addCell(cn);
//            table.addCell(sd);
//            table.addCell(st);
//            table.addCell(ti);
//            table.addCell(tp);
//            table.addCell(dt);
//            table.addCell(tl);
//            table.addCell(pa);
//            table.addCell(bn);
//            table.addCell(pt);
//            table.addCell(hi);
//            table.addCell(rn);
//            table.addCell(hn);
//            table.addCell(is);
//            table.addCell(ui);
//
//        }
//        dc.newPage();
//        table.setComplete(true);
//        table.setSplitLate(false);
//        dc.add(table);
//        dc.close();
    }//GEN-LAST:event_importpdfActionPerformed

    private void exportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportexcelActionPerformed
 try {
        HSSFWorkbook fWorkbook = new HSSFWorkbook();
        HSSFSheet fSheet;
        fSheet = fWorkbook.createSheet("new Sheet");
        HSSFFont sheetTitleFont = fWorkbook.createFont();
        File file = new File("D:\\client.xls");         

        HSSFCellStyle cellStyle = fWorkbook.createCellStyle();
        sheetTitleFont.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        //sheetTitleFont.setColor();
        DefaultTableModel model = (DefaultTableModel) tables.getModel();

        TableColumnModel model1 = tables.getTableHeader().getColumnModel();
        HSSFRow fRow1 = fSheet.createRow((short) 0);
        for (int i = 0; i < model1.getColumnCount(); i++){
            HSSFCell cell = fRow1.createCell((short) i);
            cell.setCellValue(model1.getColumn(i).getHeaderValue().toString());           

}
        for (int i = 1; i < model.getRowCount(); i++) {
            HSSFRow fRow = fSheet.createRow((short) i);
            for (int j = 1; j < model.getColumnCount(); j++) {
                HSSFCell cell = fRow.createCell((short) j);
                cell.setCellValue(model.getValueAt(i, j).toString());
                cell.setCellStyle(cellStyle);
            }
        }
        FileOutputStream fileOutputStream;
        fileOutputStream = new FileOutputStream(file);
        try (BufferedOutputStream bos = new BufferedOutputStream(fileOutputStream)) {
            fWorkbook.write(bos);
        }
        fileOutputStream.close();
    } catch (Exception e) {
        e.printStackTrace();
    }

    }//GEN-LAST:event_exportexcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clientdelete;
    private javax.swing.JButton clientdelete1;
    private javax.swing.JButton clientsave;
    private javax.swing.JButton clientupdate;
    private javax.swing.JComboBox<String> comboclient;
    private javax.swing.JTextField emails;
    private javax.swing.JButton exportexcel;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton importpdf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastname;
    private javax.swing.JTextField phonenumber;
    private javax.swing.JLabel pictures;
    private javax.swing.JTextField regnos;
    private javax.swing.JTable tables;
    private javax.swing.JButton uploads;
    // End of variables declaration//GEN-END:variables
}
